
// reset css
@import url("~normalize.css/normalize.css");

// Load Font
@import url('https://fonts.googleapis.com/css?family=Open+Sans:400,700');

// import typography
@import "./scss/typography";

// media queries
@media only screen and (min-width: 768px) { /* oder rem/em */
  html {
    font-size: 18px;
  }
}

@media only screen and (min-width: 1280px) { /* oder rem/em */
  html {
    font-size: 24px;
  }
}

// Menu
$cubic: cubic-bezier(0.4, 0.01, 0.165, 0.99);
$mukta: 'Ek Mukta', sans-serif;;

$menuItems: 11;

.window {
  overflow: hidden;
  border-radius: 3px;
  background: #ffffff;

  .header {
    position: fixed;
    display: block;
    top: 0;
    left: 0;
    background-color: white;
    height: 50px;
    width: 100%;
    overflow: hidden;
    transition: all 0.5s ease-out, background 1s ease-out;
    transition-delay: 0.2s;
    z-index: 1;
    text-align: right;
    .burger-container {
      position: relative;
      display: inline-block;
      height: 50px;
      width: 50px;
      cursor: pointer;
      transform: rotate(0deg);
      transition: all 0.3s $cubic;
      user-select: none;
      -webkit-tap-highlight-color: transparent;
      #burger {
        width: 18px;
        height: 8px;
        position: relative;
        display: block;
        margin: -4px auto 0;
        top: 50%;
        .bar {
          width: 100%;
          height: 1px;
          display: block;
          position: relative;
          background: #000;
          transition: all 0.3s $cubic;
          transition-delay: 0s;
          &.topBar {
            transform: translateY(0px) rotate(0deg);
          }
          &.btmBar {
            transform: translateY(6px) rotate(0deg);
          }
        }
      }
    }
    .icon {
      display: inline-block;
      position: absolute;
      height: 100%;
      line-height: 50px;
      width: 50px;
      height: 50px;
      text-align: center;
      color: #FFF;
      font-size: 22px;
      left: 50%;
      transform: translateX(-50%);
      &.icon-bag {
        right: 0;
        top: 0;
        left: auto;
        transform: translateX(0px);
        transition: transform 0.5s $cubic;
        transition-delay: 0.65s;
      }
    }
    ul.menu {
      position: relative;
      display: block;
      padding: 0px 48px 0;
      list-style: none;
      margin: 0;
      height: calc(100% - 50px);
      overflow: hidden;
      background-color: #ffffff;
      overflow-y: auto;

      li.menu-item {
        text-align: left;
        border-bottom: 1px solid #000;
        margin-top: 5px;
        transform: scale(1.15) translateY(-30px);
        opacity: 0;
        transition: transform 0.5s $cubic, opacity 0.6s $cubic;
        @for $i from 1 through $menuItems {
          &:nth-child(#{$i}) {
            transition-delay: #{0.56 - ($i * 0.07)}s;
          }
        }
        a {
          display: block;
          position: relative;
          color: #000;
          font-family: "Open Sans";
          font-weight: 100;
          text-decoration: none;
          font-size: 22px;
          line-height: 2.35;
          font-weight: 200;
          width: 100%;
        }
      }
    }
    &.menu-opened {
      z-index: 2;
      height: 100%;
      background-color: #FFF;
      transition: all 0.3s ease-in, background 0.5s ease-in;
      transition-delay: 0.25s;
      .burger-container {
        transform: rotate(90deg);
        #burger {
          .bar {
            transition: all 0.4s $cubic;
            transition-delay: 0.2s;
            &.topBar {
              transform: translateY(4px) rotate(45deg);
            }
            &.btmBar {
              transform: translateY(3px) rotate(-45deg);
            }
          }
        }
      }
      ul.menu {
        li.menu-item {
          transform: scale(1) translateY(0px);
          opacity: 1;
          @for $i from 1 through $menuItems {
            &:nth-child(#{$i}) {
              transition-delay: #{0.07 * $i+0.2}s;
            }
          }
        }
      }
      .icon {
        &.icon-bag {
          transform: translateX(75px);
          transition-delay: 0.3s;
        }
      }
    }
  }
  .content {
    font-family: $mukta;
    padding: 67px 4% 0;
    text-align: justify;
    overflow: scroll;
    max-height: 100%;
    &::-webkit-scrollbar  {
      display: none;
    }
    h2 {
      margin-bottom: 0px;
      letter-spacing: 1px;
    }
    img {
      width: 95%;
      position: relative;
      display: block;
      margin: 75px auto 75px;
      &:nth-of-type(2) {
        margin: 75px auto;
      }
    }
  }
  @media(max-width: 600px) {
    width: 100%;
    margin: 0;
    border-radius: 0px;
    .header {
      position: fixed;
    }
  }
}

// classes and id's
#title {
  margin-top: 100px;
}

img {
  max-width: 100%;
  margin-top: 2rem;
}

table {
  border-collapse: collapse;
  width: 100%;

  tr:nth-child(even) {
    background-color: #f2f2f2;
  }

  td{
    padding: 0.3rem;
  }

  th {
    text-align: left;
  }
}

.tabelle {
  overflow-x: auto;
}

li{
  text-decoration: none;
  background-color: none;
  color: inherit;
  border-bottom: 0px solid;
  box-shadow: inset 0 -0px;
}

li:hover{
  background-size: 0x 0px;
  background-color:transparent;
}

:not(.link) {
  background-color: #ffffff;
}


// Grid and Container
$col: 12;
$gutter: 3;
$total-breite: 100;
$col-breite: ($total-breite - (($col - 1) * $gutter)) / $col;

.container-grid {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

.container-item {
  flex-grow: 1;
  flex-shrink: 1;
  flex-basis: $col-breite * 1%;
  max-width: $col-breite * 1%;
  background-color: red;
}

.container-item-8of12 {
  flex-grow: 1;
  flex-shrink: 1;
  flex-basis: $col-breite * 8 + 7 * $gutter * 1%;
  max-width: $col-breite * 8 + 7 * $gutter * 1%;
  background-color: blue;
}


.container-item-4of12 {
  flex-grow: 1;
  flex-shrink: 1;
  flex-basis: $col-breite * 4 + 3 * $gutter * 1%;
  max-width: $col-breite * 4 + 3 * $gutter * 1%;
  background-color: blue;
}

.container-item-3of12 {
  flex-grow: 1;
  flex-shrink: 1;
  flex-basis: $col-breite * 3 + 2 * $gutter * 1%;
  max-width: $col-breite * 3 + 2 * $gutter * 1%;
  background-color: red;
}

.container-grid8sp{
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

$col8: $col-breite * 8 + 7 * $gutter;
$gutter: 3 * 100 / $col8;
$col-1of8: (100 - ((8 - 1) * $gutter)) / 8;

.container-item-4of8{
  flex-grow: 1;
  flex-shrink: 1;
  flex-basis: ($col-1of8 * 4 + 3 * $gutter) * 1%;
  max-width: ($col-1of8 * 4 + 3 * $gutter) * 1%;
  background-color: grey;
}

.container {
  max-width: 40rem;
  margin: 0 auto;
  padding: 0 2.5%;
}